---
AWSTemplateFormatVersion: 2010-09-09

Resources:
  DevOpsKpiTriggerQSRole:
    Type: AWS::IAM::Role
    Properties:
      Description: "Role to provide access for Lambda function to trigger a QuickSight Ingestion command"
      RoleName: DevOpsKpiTriggerQSRole
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }]
      }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies: 
        - PolicyName: DevOpsKpiQSS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - s3:GetObject
                - s3:ListBucket
                Resource:
                  - !ImportValue DevOpsKpiEtl:EtlOutputBucketArn
                  - !Join ['', [!ImportValue DevOpsKpiEtl:EtlOutputBucketArn, '/*']]
                Effect: Allow
        - PolicyName: DevOpsKpiQSInjestionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - quicksight:CreateIngestion
                Resource:
                  - !Join ['/', [!GetAtt QSDataSet.Arn, 'ingestion', '*']]
                Effect: Allow

  QSDataSource:
    Type: AWS::QuickSight::DataSource
    Properties:
      AwsAccountId: !Ref AWS::AccountId
      DataSourceId: !Join ['-', [!Ref AWS::AccountId, '20210625', '01']]
      DataSourceParameters:
        S3Parameters:
          ManifestFileLocation: 
            Bucket: devopskpi-346327484579-etloutput
            Key: quicksight.json
      Name: "DevOpsKPILTTD"
      Type: S3
      Permissions:
        - Actions:
            - quicksight:DescribeDataSource
            - quicksight:DescribeDataSourcePermissions
            - quicksight:PassDataSource
          Principal: !Sub 
            - 'arn:aws:quicksight:ap-southeast-2:${Account}:user/default/harrisd'
            - Account: !Ref 'AWS::AccountId'

  QSDataSet:
    Type: AWS::QuickSight::DataSet
    Properties:
      AwsAccountId: !Ref AWS::AccountId
      DataSetId: !Join ['-', [!Ref AWS::AccountId, '20210625', '01']]
      ImportMode: "SPICE"
      Name: "DevOpsKpiJiraDS"
      PhysicalTableMap:
        1234567890-001-20210625-01:
          S3Source:
            DataSourceArn: !GetAtt QSDataSource.Arn
            InputColumns: 
              - Name: columnId-1
                Type: STRING
              - Name: columnId-2
                Type: STRING
              - Name: columnId-3
                Type: STRING
              - Name: columnId-4
                Type: STRING
              - Name: columnId-5
                Type: STRING
              - Name: columnId-6
                Type: STRING
            UploadSettings:
              Format: JSON
      LogicalTableMap:
        1234567890-002-20210625-01:
          Alias: JiraLttd
          DataTransforms:
            - RenameColumnOperation:
                ColumnName: columnId-1
                NewColumnName: dateresolved
            - CastColumnTypeOperation:
                ColumnName: dateresolved
                NewColumnType: DATETIME
                Format: yyyy-MM-dd
            - RenameColumnOperation:
                ColumnName: columnId-2
                NewColumnName: key
            - RenameColumnOperation:
                ColumnName: columnId-3
                NewColumnName: datecreated
            - CastColumnTypeOperation:
                ColumnName: datecreated
                NewColumnType: DATETIME
                Format: yyyy-MM-dd
            - RenameColumnOperation:
                ColumnName: columnId-4
                NewColumnName: summary
            - RenameColumnOperation:
                ColumnName: columnId-5
                NewColumnName: lttd
            - CastColumnTypeOperation:
                ColumnName: lttd
                NewColumnType: INTEGER
            - RenameColumnOperation:
                ColumnName: columnId-6
                NewColumnName: id
            - CastColumnTypeOperation:
                ColumnName: id
                NewColumnType: INTEGER
            - ProjectOperation:
                ProjectedColumns:
                  - dateresolved
                  - key
                  - datecreated
                  - summary
                  - lttd
                  - id
          Source:
            PhysicalTableId: "1234567890-001-20210625-01"
      Permissions:
        - Actions:
            - quicksight:DescribeDataSet
            - quicksight:DescribeDataSetPermissions
            - quicksight:PassDataSet
            - quicksight:DescribeIngestion
            - quicksight:ListIngestions
          Principal: !Sub 
            - 'arn:aws:quicksight:ap-southeast-2:${Account}:user/default/harrisd'
            - Account: !Ref 'AWS::AccountId'

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: "darrenharris-lambda-repository"
        S3Key: "triggerQS.zip"
      Description: "Triggers QuickSight to ingest JIRA data"
      FunctionName: "DevOpsKpiTriggerQS"
      Handler: "triggerQS.handler"
      PackageType: "Zip"
      Role: !GetAtt DevOpsKpiTriggerQSRole.Arn
      Runtime: "nodejs14.x"
      Timeout: 10
      TracingConfig:
        Mode: "Active"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14"


  TriggerLambda:
    Type: AWS::Events::Rule
    Properties:
      Description: "Triggers Lambda function on successful completion of Glue Job"
      EventPattern: 
        source: 
          - "aws.glue"
        detail-type:
          - "Glue Job State Change"
      Name: "DevOpsKpiGlueEvent"
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: !Join ['-', [!Ref AWS::AccountId, 'DevOpsKpiGlueEvent' ,'01']]
      
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt TriggerLambda.Arn